{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./message.service\";\nexport class CalcLineService {\n  constructor(http, messageService) {\n    this.http = http;\n    this.messageService = messageService;\n    this.linesUrl = 'http://localhost:4201/mock-calcs.json'; // URL to web api\n  }\n\n  log(message) {\n    this.messageService.add(`CalcLineService: ${message}`);\n  }\n  getAll() {\n    const result = this.http.get(this.linesUrl);\n    log('fetched all');\n    return result;\n  }\n  getLine(id) {\n    const line = CALC_LINES.find(each => each.id === id);\n    log(`fetched line id=${id}`);\n    return of(result);\n  }\n  goBack() {\n    this.location.back();\n  }\n}\nCalcLineService.ɵfac = function CalcLineService_Factory(t) {\n  return new (t || CalcLineService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MessageService));\n};\nCalcLineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalcLineService,\n  factory: CalcLineService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAIA,SAAqBA,EAAE,QAAQ,MAAM;;;;AAMrC,OAAM,MAAOC,eAAe;EAG3BC,YACSC,IAAgB,EAChBC,cAA8B;IAD9B,SAAI,GAAJD,IAAI;IACJ,mBAAc,GAAdC,cAAc;IAJf,aAAQ,GAAG,uCAAuC,CAAC,CAAE;EAKzD;;EAEIC,GAAG,CAACC,OAAe;IAC1B,IAAI,CAACF,cAAc,CAACG,GAAG,CAAC,oBAAoBD,OAAO,EAAE,CAAC;EACvD;EAEAE,MAAM;IACL,MAAMC,MAAM,GAAG,IAAI,CAACN,IAAI,CAACO,GAAG,CAAa,IAAI,CAACC,QAAQ,CAAC;IACvDN,GAAG,CAAC,aAAa,CAAC;IAClB,OAAOI,MAAM;EACd;EAEAG,OAAO,CAACC,EAAU;IACjB,MAAMC,IAAI,GAAGC,UAAU,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAE;IACrDR,GAAG,CAAC,mBAAmBQ,EAAE,EAAE,CAAC;IAC5B,OAAOb,EAAE,CAACS,MAAM,CAAC;EAClB;EAEAS,MAAM;IACL,IAAI,CAACC,QAAQ,CAACC,IAAI,EAAE;EACrB;;AA1BYnB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAoB,SAAfpB,eAAe;EAAAqB,YAFd;AAAM","names":["of","CalcLineService","constructor","http","messageService","log","message","add","getAll","result","get","linesUrl","getLine","id","line","CALC_LINES","find","each","goBack","location","back","factory","providedIn"],"sourceRoot":"","sources":["/home/mike/Hacking/mcalc-web/mcalc/src/app/calc-line.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { CalcLine } from './calc-line';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalcLineService {\n\tprivate linesUrl = 'http://localhost:4201/mock-calcs.json';  // URL to web api\n\n\tconstructor(\n\t\tprivate http: HttpClient,\n\t\tprivate messageService: MessageService\n\t) { }\n\n\tprivate log(message: string) {\n\t\tthis.messageService.add(`CalcLineService: ${message}`);\n\t}\n\n\tgetAll(): Observable<CalcLine[]> {\n\t\tconst result = this.http.get<CalcLine[]>(this.linesUrl)\n\t\tlog('fetched all');\n\t\treturn result;\n\t}\n\n\tgetLine(id: number): Observable<CalcLine> {\n\t\tconst line = CALC_LINES.find(each => each.id === id)!;\n\t\tlog(`fetched line id=${id}`);\n\t\treturn of(result);\n\t}\n\n\tgoBack(): void {\n\t\tthis.location.back();\n\t}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}